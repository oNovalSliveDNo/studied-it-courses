# test_api.py


import requests
import json

BASE_URL = "http://localhost:8899"


def test_endpoint(url, expected_status=200, description=""):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–¥"""
    try:
        response = requests.get(url)
        status_ok = response.status_code == expected_status
        print(f"{'‚úÖ' if status_ok else '‚ùå'} {description}")
        print(f"   URL: {url}")
        print(f"   Status: {response.status_code} (expected {expected_status})")

        if status_ok and response.content:
            try:
                data = response.json()
                print(f"   Response: {json.dumps(data, ensure_ascii=False)[:100]}...")
                if isinstance(data, list):
                    print(f"   Items count: {len(data)}")
            except:
                print(f"   Response: {response.text[:100]}...")

        print()
        return status_ok

    except Exception as e:
        print(f"‚ùå {description} - Error: {e}")
        print()
        return False


def run_all_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print("üöÄ Starting API tests...\n")

    tests = [
        # –¢–µ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        (f"{BASE_URL}/user/1", 200, "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
        (f"{BASE_URL}/user/999999", 404, "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (404)"),
        (f"{BASE_URL}/user/2", 200, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2"),
        (f"{BASE_URL}/user/10", 200, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 10"),

        # –¢–µ—Å—Ç—ã –ø–æ—Å—Ç–æ–≤
        (f"{BASE_URL}/post/1", 200, "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ—Å—Ç"),
        (f"{BASE_URL}/post/999999", 404, "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ—Å—Ç (404)"),
        (f"{BASE_URL}/post/2", 200, "–ü–æ—Å—Ç 2"),
        (f"{BASE_URL}/post/10", 200, "–ü–æ—Å—Ç 10"),

        # –¢–µ—Å—Ç—ã –ª–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        (f"{BASE_URL}/user/999/feed", 200, "–õ–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 999"),
        (f"{BASE_URL}/user/999/feed?limit=3", 200, "–õ–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 999 (limit=3)"),
        (f"{BASE_URL}/user/999999/feed", 200, "–õ–µ–Ω—Ç–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—É—Å—Ç–∞—è)"),

        # –¢–µ—Å—Ç—ã –ª–µ–Ω—Ç—ã –ø–æ—Å—Ç–∞
        (f"{BASE_URL}/post/1/feed", 200, "–õ–µ–Ω—Ç–∞ –ø–æ—Å—Ç–∞ 1"),
        (f"{BASE_URL}/post/1/feed?limit=2", 200, "–õ–µ–Ω—Ç–∞ –ø–æ—Å—Ç–∞ 1 (limit=2)"),
        (f"{BASE_URL}/post/999999/feed", 200, "–õ–µ–Ω—Ç–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ—Å—Ç–∞ (–ø—É—Å—Ç–∞—è)"),

        # –¢–µ—Å—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        (f"{BASE_URL}/post/recommendations/", 200, "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (default limit=10)"),
        (f"{BASE_URL}/post/recommendations/?limit=5", 200, "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (limit=5)"),
        (f"{BASE_URL}/post/recommendations/?limit=3", 200, "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (limit=3)"),
    ]

    passed = 0
    total = len(tests)

    for url, expected_status, description in tests:
        if test_endpoint(url, expected_status, description):
            passed += 1

    print(f"üìä Results: {passed}/{total} tests passed")

    if passed == total:
        print("üéâ All tests passed successfully!")
    else:
        print("‚ùå Some tests failed!")

    return passed == total


if __name__ == "__main__":
    run_all_tests()
